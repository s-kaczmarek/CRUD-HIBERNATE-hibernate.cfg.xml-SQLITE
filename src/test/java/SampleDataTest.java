import domain.Contact;
import domain.ContactRepository;
import domain.Email;
import domain.Group;
import domain.utils.SampleDataUtils;
import hibernate.utils.HibernateUtils;
import org.hibernate.Session;
import org.junit.Assert;
import org.junit.Test;
import javax.persistence.TypedQuery;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SampleDataTest {

    @Test
    public void shouldAddSampleDataToDataBase(){

        List<Contact> sampleContactsGeneratedList = SampleDataUtils.generateTestData();

        // LOG
        System.out.println("Sample contacts generated by SampleDataUtils: ");
        for(Contact contact : sampleContactsGeneratedList){
            System.out.println(contact);
        }

        ContactRepository.addNewContactsFromList(sampleContactsGeneratedList);

        // Fetch Sample Contacts from database and store in list

        List<Contact> sampleContactsFetchedFromDatabaseList = new ArrayList<Contact>();
        for(Contact contact : sampleContactsGeneratedList){
            String customQueryFindTestContact = "select c from Contact c where c.firstName = :firstName and c.lastName = :lastName";
            String key11 = "firstName";
            String value11 = contact.getFirstName();
            String key12 = "lastName";
            String value12 = contact.getLastName();
            Map parametersMap = new HashMap<String, String>();
            parametersMap.put(key11, value11);
            parametersMap.put(key12, value12);

            List<Contact> contactFound = ContactRepository.listContactsByCustomQuery(customQueryFindTestContact, parametersMap);
            sampleContactsFetchedFromDatabaseList.add(contactFound.get(0));
        }

        // LOG
        System.out.println("Sample contacts fetched from database: ");
        for(Contact contact : sampleContactsFetchedFromDatabaseList){
            System.out.println(contact);
        }

        // Generate list of First Names from contacts in sampleContactsGeneratedList

        List<String> firstnamesFromSampleContactsGeneratedList = new ArrayList<String>();

        for(Contact contact : sampleContactsGeneratedList){
            firstnamesFromSampleContactsGeneratedList.add(contact.getFirstName());
        }

        // Generate list of First Names from contacts in sampleContactsFetchedFromDatabaseList

        List<String> firstnamesFromSampleContactsFetchedFromDatabaseList = new ArrayList<String>();

        for(Contact contact : sampleContactsFetchedFromDatabaseList){
            firstnamesFromSampleContactsFetchedFromDatabaseList.add(contact.getFirstName());
        }

        // Check if lists contain same values

        Assert.assertEquals(firstnamesFromSampleContactsGeneratedList, firstnamesFromSampleContactsFetchedFromDatabaseList);

        // Delete sample data from database

        ContactRepository.deleteContactsFromList(sampleContactsFetchedFromDatabaseList);

    }
}
